<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coolers.housekeep.housekeep.dao.WebLogMapper">
  <resultMap id="BaseResultMap" type="com.coolers.housekeep.housekeep.po.WebLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="api_id" jdbcType="VARCHAR" property="apiId" />
    <result column="res_type" jdbcType="VARCHAR" property="resType" />
    <result column="err_msg" jdbcType="VARCHAR" property="errMsg" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.coolers.housekeep.housekeep.po.WebLogWithBLOBs">
    <result column="req_params" jdbcType="LONGVARCHAR" property="reqParams" />
    <result column="res_params" jdbcType="LONGVARCHAR" property="resParams" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, ip, api_id, res_type, err_msg, create_time
  </sql>
  <sql id="Blob_Column_List">
    req_params, res_params
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.coolers.housekeep.housekeep.po.WebLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from web_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.coolers.housekeep.housekeep.po.WebLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from web_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from web_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from web_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.coolers.housekeep.housekeep.po.WebLogExample">
    delete from web_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coolers.housekeep.housekeep.po.WebLogWithBLOBs">
    insert into web_log (id, user_id, ip, 
      api_id, res_type, err_msg, 
      create_time, req_params, res_params
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{apiId,jdbcType=VARCHAR}, #{resType,jdbcType=VARCHAR}, #{errMsg,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{reqParams,jdbcType=LONGVARCHAR}, #{resParams,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coolers.housekeep.housekeep.po.WebLogWithBLOBs">
    insert into web_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="apiId != null">
        api_id,
      </if>
      <if test="resType != null">
        res_type,
      </if>
      <if test="errMsg != null">
        err_msg,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="reqParams != null">
        req_params,
      </if>
      <if test="resParams != null">
        res_params,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null">
        #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="resType != null">
        #{resType,jdbcType=VARCHAR},
      </if>
      <if test="errMsg != null">
        #{errMsg,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqParams != null">
        #{reqParams,jdbcType=LONGVARCHAR},
      </if>
      <if test="resParams != null">
        #{resParams,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coolers.housekeep.housekeep.po.WebLogExample" resultType="java.lang.Long">
    select count(*) from web_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update web_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.apiId != null">
        api_id = #{record.apiId,jdbcType=VARCHAR},
      </if>
      <if test="record.resType != null">
        res_type = #{record.resType,jdbcType=VARCHAR},
      </if>
      <if test="record.errMsg != null">
        err_msg = #{record.errMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reqParams != null">
        req_params = #{record.reqParams,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.resParams != null">
        res_params = #{record.resParams,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update web_log
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      api_id = #{record.apiId,jdbcType=VARCHAR},
      res_type = #{record.resType,jdbcType=VARCHAR},
      err_msg = #{record.errMsg,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      req_params = #{record.reqParams,jdbcType=LONGVARCHAR},
      res_params = #{record.resParams,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update web_log
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      api_id = #{record.apiId,jdbcType=VARCHAR},
      res_type = #{record.resType,jdbcType=VARCHAR},
      err_msg = #{record.errMsg,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coolers.housekeep.housekeep.po.WebLogWithBLOBs">
    update web_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="apiId != null">
        api_id = #{apiId,jdbcType=VARCHAR},
      </if>
      <if test="resType != null">
        res_type = #{resType,jdbcType=VARCHAR},
      </if>
      <if test="errMsg != null">
        err_msg = #{errMsg,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqParams != null">
        req_params = #{reqParams,jdbcType=LONGVARCHAR},
      </if>
      <if test="resParams != null">
        res_params = #{resParams,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.coolers.housekeep.housekeep.po.WebLogWithBLOBs">
    update web_log
    set user_id = #{userId,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      api_id = #{apiId,jdbcType=VARCHAR},
      res_type = #{resType,jdbcType=VARCHAR},
      err_msg = #{errMsg,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      req_params = #{reqParams,jdbcType=LONGVARCHAR},
      res_params = #{resParams,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coolers.housekeep.housekeep.po.WebLog">
    update web_log
    set user_id = #{userId,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      api_id = #{apiId,jdbcType=VARCHAR},
      res_type = #{resType,jdbcType=VARCHAR},
      err_msg = #{errMsg,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>